{"ast":null,"code":"var _jsxFileName = \"/Users/rumenivanov/CS50W/SpringBoard/39.8reactforms/ToDo/src/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    const newTodo = {\n      ...todo,\n      id: uuid()\n    };\n    setTodos(todos => [...todos, newTodo]);\n  };\n  const removeTodo = id => {\n    const todosCopy = [...todos];\n    setTodos(todos => todosCopy.filter(todo => todo.id !== id));\n  };\n  const [editTodoForm, setEditTodoForm] = useState();\n  const editTodo = (id, task) => {\n    setEditTodoForm( /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      id: id,\n      editTodo: editTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this));\n    console.log(id, task);\n    const todosCopy = [...todos];\n    todosCopy.map(todo => {\n      if (todo.id === id) {\n        todo.task = task.task;\n      }\n      return todo;\n    });\n    console.log(todosCopy);\n    setTodos(todosCopy);\n    setEditTodoForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodosList\",\n    children: [/*#__PURE__*/_jsxDEV(NewTodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), editTodoForm, todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo.task,\n      remove: () => removeTodo(todo.id),\n      edit: () => editTodo(todo.id, todo.task),\n      testId: todo.id\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"Xq0TEAZqCy6OtNdVgWaWqupCqkI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Todo","NewTodoForm","EditTodoForm","v4","uuid","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","addTodo","todo","newTodo","id","removeTodo","todosCopy","filter","editTodoForm","setEditTodoForm","editTodo","task","fileName","_jsxFileName","lineNumber","columnNumber","console","log","map","className","children","remove","edit","testId","_c","$RefreshReg$"],"sources":["/Users/rumenivanov/CS50W/SpringBoard/39.8reactforms/ToDo/src/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction TodoList(){\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n        const newTodo = {...todo, id: uuid()};\n        setTodos(todos => [...todos, newTodo])\n    }\n\n    const removeTodo = id => {\n        const todosCopy = [...todos];\n        setTodos(todos => todosCopy.filter(todo => todo.id !== id))\n    }\n    \n    const [editTodoForm, setEditTodoForm] = useState();\n\n    const editTodo = (id, task) => {\n        setEditTodoForm(<EditTodoForm id={id} editTodo={editTodo} />)\n        console.log(id, task)\n        const todosCopy = [...todos];\n        todosCopy.map(todo => {\n            if(todo.id === id){\n                todo.task = task.task;\n\n            }\n            return todo;\n        })\n        console.log(todosCopy)\n        setTodos(todosCopy);\n        setEditTodoForm();\n    }\n\n    return (\n        <div className=\"TodosList\">\n            <NewTodoForm addTodo={addTodo} />\n            {editTodoForm}\n            {todos.map((todo) => (<Todo \n                                   key={todo.id} \n                                   task={todo.task} \n                                   remove={() => removeTodo(todo.id)} \n                                   edit={() => editTodo(todo.id, todo.task)}\n                                   testId={todo.id}/>))}\n        </div>\n    )\n}\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,OAAO,GAAGC,IAAI,IAAI;IACpB,MAAMC,OAAO,GAAG;MAAC,GAAGD,IAAI;MAAEE,EAAE,EAAEV,IAAI,CAAC;IAAC,CAAC;IACrCM,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAEI,OAAO,CAAC,CAAC;EAC1C,CAAC;EAED,MAAME,UAAU,GAAGD,EAAE,IAAI;IACrB,MAAME,SAAS,GAAG,CAAC,GAAGP,KAAK,CAAC;IAC5BC,QAAQ,CAACD,KAAK,IAAIO,SAAS,CAACC,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC/D,CAAC;EAED,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAElD,MAAMqB,QAAQ,GAAGA,CAACN,EAAE,EAAEO,IAAI,KAAK;IAC3BF,eAAe,eAACb,OAAA,CAACJ,YAAY;MAACY,EAAE,EAAEA,EAAG;MAACM,QAAQ,EAAEA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAACb,EAAE,EAAEO,IAAI,CAAC;IACrB,MAAML,SAAS,GAAG,CAAC,GAAGP,KAAK,CAAC;IAC5BO,SAAS,CAACY,GAAG,CAAChB,IAAI,IAAI;MAClB,IAAGA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAAC;QACdF,IAAI,CAACS,IAAI,GAAGA,IAAI,CAACA,IAAI;MAEzB;MACA,OAAOT,IAAI;IACf,CAAC,CAAC;IACFc,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;IACtBN,QAAQ,CAACM,SAAS,CAAC;IACnBG,eAAe,CAAC,CAAC;EACrB,CAAC;EAED,oBACIb,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBxB,OAAA,CAACL,WAAW;MAACU,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChCP,YAAY,EACZT,KAAK,CAACmB,GAAG,CAAEhB,IAAI,iBAAMN,OAAA,CAACN,IAAI;MAEJqB,IAAI,EAAET,IAAI,CAACS,IAAK;MAChBU,MAAM,EAAEA,CAAA,KAAMhB,UAAU,CAACH,IAAI,CAACE,EAAE,CAAE;MAClCkB,IAAI,EAAEA,CAAA,KAAMZ,QAAQ,CAACR,IAAI,CAACE,EAAE,EAAEF,IAAI,CAACS,IAAI,CAAE;MACzCY,MAAM,EAAErB,IAAI,CAACE;IAAG,GAJXF,IAAI,CAACE,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIK,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACjB,EAAA,CA3CQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}